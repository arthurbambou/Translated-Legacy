buildscript {
	repositories {
		mavenCentral()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
		maven { 
			name = 'Jitpack'
			url 'https://jitpack.io/'
		}
		maven {
			name = 'HalfOf2'
			url = 'https://storage.googleapis.com/devan-maven/'
		}
	}
	dependencies {
		classpath 'com.github.Chocohead:Fabric-Loom:3219e42'
	}
}

apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = 'HalfOf2'
		url = 'https://storage.googleapis.com/devan-maven/'
	}
//	maven {
//		allowInsecureProtocol(true)
//		url "https://maven.glass-launcher.net/repo/"
//	}
	maven {
		name = 'Jitpack'
		url 'https://jitpack.io/'
	}
}

minecraft {
	//Skip old versions of libraries which Mojang use but we don't need
	addLibraryFilter {library ->
		return !(library.startsWith('net.minecraft:launchwrapper:') ||
					library.startsWith('net.sf.jopt-simple:jopt-simple:') ||
					library.startsWith('org.ow2.asm:asm-all:'))
	}
}

dependencies {
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	implementation 'com.google.guava:guava:28.0-jre'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

	// mixin and fabric loader need asm 9
	implementation 'org.ow2.asm:asm:9.0'
	implementation 'org.ow2.asm:asm-analysis:9.0'
	implementation 'org.ow2.asm:asm-commons:9.0'
	implementation 'org.ow2.asm:asm-tree:9.0'
	implementation 'org.ow2.asm:asm-util:9.0'
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "io.github.minecraft-cursed-legacy:plasma:b1.7.3-build.${project.plasma_build}"

	modImplementation("io.github.minecraft-cursed-legacy:cursed-fabric-loader:${project.loader_version}") {
		transitive false
	}

	// API. You technically don't need it, but it's extremely useful for not having to write the same code in every mod.
	modCompileOnly "io.github.minecraft-cursed-legacy:cursed-legacy-api:${project.api_version}"

	implementation "com.github.jhalterman:typetools:87240d6"
	implementation "com.github.mineLdiver:expressions:2fa66db"
	implementation "com.github.mineLdiver:UnsafeEvents:7efec57"
	modCompileOnly ("com.github.ModificationStation:StationAPI:2.0-PRE2") {
		exclude group: "com.github.minecraft-cursed-legacy"
	}

	modCompileOnly ('com.github.paulevsGitch:Creative-b.1.7.3-:0.1.2') {
		exclude group: "com.github.minecraft-cursed-legacy"
		exclude group: "net.modificationstation"
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}
